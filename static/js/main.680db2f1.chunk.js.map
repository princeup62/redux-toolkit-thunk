{"version":3,"sources":["sevices/managementSlice.js","components/management-page/Management.js","sevices/EditSlice.js","sevices/adderSlice.js","components/adder/Adder.js","components/management-page/EditManagement.js","App.js","reportWebVitals.js","index.js"],"names":["getData","createAsyncThunk","a","fetch","then","response","json","managementSlice","createSlice","name","initialState","list","isLoading","isRejected","extraReducers","fulfilled","state","action","payload","pending","rejected","Management","dispatch","useDispatch","APIdata","useSelector","managementR","history","useHistory","useEffect","className","console","log","scope","map","item","id","roleName","Actions","onClick","push","editGetData","obj","editpostData","method","headers","Accept","body","JSON","stringify","resp","editManagementSlice","data","alert","adderSlice","num","reducers","increment","decrement","incrementByparam","parseInt","actions","store","configureStore","reducer","counter","managementReducer","editManagementR","Adder","EditManagement","editApiData","useParams","params","useState","editData","setEditData","for","type","value","onChange","event","target","preventDefault","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.680db2f1.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const getData = createAsyncThunk(\"getData/getData\", async () => {\r\n  return fetch(\"https://61292da4068adf001789b801.mockapi.io//role\").then(\r\n    (response) => response.json()\r\n  );\r\n});\r\n\r\nconst managementSlice = createSlice({\r\n  name: \"management\",\r\n  initialState: {\r\n    list: [],\r\n    isLoading: false,\r\n    isRejected: false,\r\n  },\r\n  extraReducers: {\r\n    [getData.fulfilled]: (state, action) => {\r\n      state.list = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    [getData.pending]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [getData.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.isRejected = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport default managementSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getData } from \"../../sevices/managementSlice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction Management() {\r\n  const dispatch = useDispatch();\r\n  const APIdata = useSelector((state) => state.managementR);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(getData());\r\n  }, []);\r\n  return (\r\n    <div className=\"table-responsive-sm  \">\r\n      {console.log(\"API\", APIdata.list)}\r\n      <table className=\"table text-light \">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">First</th>\r\n            <th scope=\"col\">Last</th>\r\n            <th scope=\"col\">Handle</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {APIdata.list.map((item) => (\r\n            <tr>\r\n              <td>{item.id}</td>\r\n              <td>{item.roleName}</td>\r\n              <td>\r\n                {item.Actions ? \"Active\" : \"Inactive\"}\r\n                <button\r\n                  className=\"btn btn-outline-warning mx-5\"\r\n                  onClick={() => history.push(`/edit/${item.id}`)}\r\n                >\r\n                  <EditIcon />\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Management;\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport { getData } from \"./managementSlice\";\r\n\r\nexport const editGetData = createAsyncThunk(\"editGetData\", async (obj) => {\r\n  return fetch(`https://61292da4068adf001789b801.mockapi.io//role/${obj}`).then(\r\n    (response) => {\r\n      return response.json();\r\n    }\r\n  );\r\n});\r\n\r\nexport const editpostData = createAsyncThunk(\r\n  \"editPostData\",\r\n  async (obj, { dispatch }) => {\r\n    return fetch(\r\n      `https://61292da4068adf001789b801.mockapi.io//role/${obj.id}`,\r\n      {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(obj),\r\n      }\r\n    ).then((resp) => {\r\n      dispatch(getData());\r\n      return resp.json();\r\n    });\r\n  }\r\n);\r\n\r\nconst editManagementSlice = createSlice({\r\n  name: \"Edit\",\r\n  initialState: {\r\n    data: {},\r\n    isLoading: false,\r\n    isRejected: false,\r\n  },\r\n\r\n  extraReducers: {\r\n    [editGetData.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.data = action.payload;\r\n    },\r\n    [editGetData.pending]: (state) => {\r\n      state.isRejected = false;\r\n      state.isLoading = true;\r\n    },\r\n    [editGetData.rejected]: (state) => {\r\n      state.isLoading = false;\r\n      state.isRejected = true;\r\n    },\r\n    [editpostData.fulfilled]: (state, action) => {\r\n      state.isLoading = false;\r\n      state.data = action.payload;\r\n      alert(\"edited sucessfuly...................\");\r\n    },\r\n    [editpostData.rejected]: (state) => {\r\n      alert(\"rejected\");\r\n    },\r\n  },\r\n});\r\n\r\nexport default editManagementSlice.reducer;\r\n","import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport managementReducer from \"./managementSlice\";\r\nimport editManagementSlice from \"./EditSlice\";\r\n\r\nconst adderSlice = createSlice({\r\n  name: \"adder\",\r\n  initialState: {\r\n    num: 99,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.num = state.num + 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.num = state.num - 1;\r\n    },\r\n    incrementByparam: (state, action) => {\r\n      state.num = state.num + parseInt(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByparam } = adderSlice.actions;\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    counter: adderSlice.reducer,\r\n    managementR: managementReducer,\r\n    editManagementR: editManagementSlice,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  increment,\r\n  decrement,\r\n  incrementByparam,\r\n} from \"../../sevices/adderSlice\";\r\n\r\nfunction Adder() {\r\n  const counter = useSelector((state) => state.counter.num);\r\n  const dispatch = useDispatch();\r\n  const [addingString, setAddingString] = useState(\"\");\r\n\r\n  const handleString = (event) => {\r\n    setAddingString(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      {console.log(counter)}\r\n      <h1 className=\"text-light\">{counter}</h1>\r\n      <div className=\"d-flex\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => dispatch(increment())}\r\n        >\r\n          Add\r\n        </button>\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          onClick={() => dispatch(decrement())}\r\n        >\r\n          Substract\r\n        </button>\r\n      </div>\r\n      <div className=\"row mt-5\">\r\n        <div className=\"col-md-5\">\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control col-md-4\"\r\n            placeholder=\"Add number into counter\"\r\n            value={addingString}\r\n            onChange={handleString}\r\n          />\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={() => dispatch(incrementByparam(addingString))}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Adder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editGetData, editpostData } from \"../../sevices/EditSlice\";\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction EditManagement() {\r\n  const editApiData = useSelector((state) => state.editManagementR.data);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  console.log(\"PARAMS\", useParams());\r\n\r\n  const params = useParams().id;\r\n\r\n  const [editData, setEditData] = useState({\r\n    roleName: \"\",\r\n    Actions: false,\r\n    id: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(editGetData(params));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setEditData({\r\n      roleName: editApiData.roleName,\r\n      Actions: editApiData.Actions,\r\n      id: editApiData.id,\r\n    });\r\n  }, [editApiData]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6 p-5 bg-light rounded mx-auto\">\r\n        {console.log(\"Edit\", editApiData)}\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Role Name</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={editData.roleName}\r\n              onChange={(event) =>\r\n                setEditData({ ...editData, roleName: event.target.value })\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <h1\r\n            onClick={() =>\r\n              setEditData({ ...editData, Actions: !editData.Actions })\r\n            }\r\n          >\r\n            {editData.Actions ? \"on\" : \"off\"}\r\n          </h1>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={(event) => {\r\n              event.preventDefault();\r\n              dispatch(editpostData(editData));\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditManagement;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./components/management-page/Management\";\nimport Management from \"./components/management-page/Management\";\nimport Adder from \"./components/adder/Adder\";\nimport EditManagement from \"./components/management-page/EditManagement\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"main-content-wrapper \">\n        <HashRouter>\n          <Switch>\n            <Route path=\"/\" exact component={Management} />\n            <Route path=\"/edit/:id\">\n              <EditManagement />\n            </Route>\n          </Switch>\n        </HashRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./sevices/adderSlice\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}